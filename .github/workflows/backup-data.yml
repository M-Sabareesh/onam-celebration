# GitHub Action to automatically backup Onam Celebration data
# This runs on your development repository, not the data repository

name: Backup Onam Data to GitHub

on:
  # Trigger manually when you want to backup
  workflow_dispatch:
  
  # Or trigger on push to main (when you add new questions/events)
  push:
    branches: [ main ]
    paths:
      - 'apps/core/fixtures/**'
      - 'apps/core/management/commands/populate_questions.py'

jobs:
  backup:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout main repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Setup Django
      env:
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'backup-secret-key' }}
        DATABASE_URL: sqlite:///backup_db.sqlite3
      run: |
        python manage.py migrate
        python manage.py populate_questions
        
    - name: Create backup
      env:
        SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY || 'backup-secret-key' }}
        DATABASE_URL: sqlite:///backup_db.sqlite3
      run: |
        python manage.py backup_data --output-dir=data_backup
        
    - name: Checkout data repository
      uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}/onam-celebration-data
        token: ${{ secrets.DATA_REPO_TOKEN }}
        path: data-repo
        
    - name: Update data repository
      run: |
        # Copy backup files to data repository
        cp -r data_backup/* data-repo/data_backup/
        
        cd data-repo
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git diff --staged --quiet || git commit -m "ðŸ”„ Auto backup from $(date)"
        git push
